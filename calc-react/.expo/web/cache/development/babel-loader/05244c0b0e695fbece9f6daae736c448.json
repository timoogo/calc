{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/timogo/Sites/Calc/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react-dom';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Style from \"./src/Style\";\nimport InputButton from \"./src/InputButton\";\nimport TouchableHighlight from \"./src/TouchableHighlight\";\nvar inputButtons = [[1, 2, 3, '/'], [4, 5, 6, '*'], [7, 8, 9, '-'], [0, '.', '=', '+']];\n\nvar ReactCalculator = function (_Component) {\n  _inherits(ReactCalculator, _Component);\n\n  var _super = _createSuper(ReactCalculator);\n\n  function ReactCalculator() {\n    _classCallCheck(this, ReactCalculator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ReactCalculator, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableHighlight, {\n        style: Style.inputButton,\n        underlayColor: \"#193441\",\n        onPress: this.props.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: Style.inputButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, this.props.value));\n    }\n  }, {\n    key: \"_renderInputButtons\",\n    value: function _renderInputButtons() {\n      var views = [];\n\n      for (var r = 0; r < inputButtons.length; r++) {\n        var row = inputButtons[r];\n        var inputRow = [];\n\n        for (var i = 0; i < row.length; i++) {\n          var input = row[i];\n          inputRow.push(React.createElement(InputButton, {\n            value: input,\n            onPress: this._onInputButtonPressed.bind(this, input),\n            key: r + \"-\" + i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }\n          }));\n        }\n\n        return views;\n      }\n    }\n  }]);\n\n  return ReactCalculator;\n}(Component);\n\nexport default ReactCalculator;","map":{"version":3,"sources":["/Users/timogo/Sites/Calc/App.js"],"names":["React","Component","Style","InputButton","TouchableHighlight","inputButtons","ReactCalculator","inputButton","props","onPress","inputButtonText","value","views","r","length","row","inputRow","i","input","push","_onInputButtonPressed","bind"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IACEC,SADF,QAEO,WAFP;;;;AASA,OAAOC,KAAP;AACA,OAAOC,WAAP;AACA,OAAOC,kBAAP;AAGA,IAAMC,YAAY,GAAG,CACjB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CADiB,EAEjB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAFiB,EAGjB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAHiB,EAIjB,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd,CAJiB,CAArB;;IAOMC,e;;;;;;;;;;;;;WAEF,kBAAS;AACL,aAEI,oBAAC,kBAAD;AAAoB,QAAA,KAAK,EAAEJ,KAAK,CAACK,WAAjC;AACoB,QAAA,aAAa,EAAC,SADlC;AAEoB,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,KAAK,CAACQ,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,KAAKF,KAAL,CAAWG,KAAhD,CAHJ,CAFJ;AAQH;;;WAED,+BAAsB;AAClB,UAAIC,KAAK,GAAG,EAAZ;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,YAAY,CAACS,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,YAAIE,GAAG,GAAGV,YAAY,CAACQ,CAAD,CAAtB;AAEA,YAAIG,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACD,MAAxB,EAAgCG,CAAC,EAAjC,EAAqC;AACjC,cAAIC,KAAK,GAAGH,GAAG,CAACE,CAAD,CAAf;AAEAD,UAAAA,QAAQ,CAACG,IAAT,CACI,oBAAC,WAAD;AACI,YAAA,KAAK,EAAED,KADX;AAEI,YAAA,OAAO,EAAE,KAAKE,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCH,KAAtC,CAFb;AAGI,YAAA,GAAG,EAAEL,CAAC,GAAG,GAAJ,GAAUI,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAGD,eAAOL,KAAP;AACH;AACJ;;;;EAlCyBX,S;;AAoC9B,eAAeK,eAAf","sourcesContent":["import React, {\n  Component\n} from 'react-dom';\nimport {\n  View,\n  Text,\n  AppRegistry\n} from 'react-native';\n\nimport Style from './src/Style';\nimport InputButton from './src/InputButton';\nimport TouchableHighlight from './src/TouchableHighlight';\n\n// Define the input buttons that will be displayed in the calculator.\nconst inputButtons = [\n    [1, 2, 3, '/'],\n    [4, 5, 6, '*'],\n    [7, 8, 9, '-'],\n    [0, '.', '=', '+']\n];\n\nclass ReactCalculator extends Component {\n\n    render() {\n        return (\n\n            <TouchableHighlight style={Style.inputButton}\n                                underlayColor=\"#193441\"\n                                onPress={this.props.onPress}>\n                <Text style={Style.inputButtonText}>{this.props.value}</Text>\n            </TouchableHighlight>\n        )\n    }\n\n    _renderInputButtons() {\n        let views = [];\n\n        for (var r = 0; r < inputButtons.length; r++) {\n            let row = inputButtons[r];\n\n            let inputRow = [];\n            for (var i = 0; i < row.length; i++) {\n                let input = row[i];\n\n                inputRow.push(\n                    <InputButton\n                        value={input}\n                        onPress={this._onInputButtonPressed.bind(this, input)}\n                        key={r + \"-\" + i}/>\n                );\n            }\n\n\n            return views;\n        }\n    }\n}\nexport default ReactCalculator\n"]},"metadata":{},"sourceType":"module"}